---
description: 
globs: 
alwaysApply: false
---
# Veritarc AI - Frontend Rules

## Core UX Principles (Apply to All Interfaces)
- You must pay attention to visual clarity and contrast. Do not place white text on a white background
- You must ensure the UX is pleasant. Boxes should grow to fit their contents, etc.
- When asking the user for sensitive information - you must use password style text-entry boxes in the UI
- Always provide users with a way to run the created UI once you have created it

## Primary Interface: Streamlit
- Use Streamlit as the primary interface for evidence validation
- Implement intuitive PDF file upload workflows
- Display confidence scores and validation results clearly
- Provide interactive data visualization for audit insights
- Handle large PDF file uploads with progress indicators
- Implement proper error handling and user feedback
- Apply core UX principles: ensure good contrast, responsive layouts, secure input fields

## Future React Components
- You should use Next.js as it works best with Vercel
- This frontend will ultimately be deployed on Vercel, but it should be possible to test locally
- Follow modern React patterns (hooks, functional components)
- Use TypeScript for type safety
- Implement responsive design for various screen sizes
- Focus on accessibility and usability
- Use proper state management (Context API or Redux)
- **Future Enhancement**: Support for multiple file types (DOCX, images, CSV)

## UI/UX Guidelines
- Design with audit professionals in mind
- Prioritize data clarity and evidence traceability
- Use clear visual indicators for confidence levels
- Implement intuitive navigation for SOX validation workflows
- Provide clear feedback for PDF processing status
- Design for regulatory compliance documentation needs
- Keep interface simple and focused for prototype demonstration

## Frontend Development Priorities
1. **User Experience**: Focus on audit professional workflows for SOX compliance
2. **Data Visualization**: Clear presentation of validation results
3. **File Handling**: Robust PDF upload and processing interfaces  
4. **Performance**: Responsive interfaces for PDF document processing
5. **Compliance**: Interface design that supports audit trail requirements
6. **Simplicity**: Streamlined interface for prototype demonstration

## Integration with Backend
- Handle async operations gracefully with loading states
- Implement proper error boundary components
- Use structured data formats from backend APIs
- Maintain session state for complex validation workflows
